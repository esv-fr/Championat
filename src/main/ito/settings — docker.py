"""
Django settings for ito project.

Generated by 'django-admin startproject' using Django 3.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
# Import OS for 
import os

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
DATE_INPUT_FORMATS = ['%d.%m.%Y']

#Needed for JWT
from datetime import timedelta

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = 'django-insecure-r3abx^y+!cnw8licd8f6*#xb@=&u(wtk1!21k55xub)b*c4qn&'
SECRET_KEY = os.environ.get('SECRET_KEY')
# For docker-compose env

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
DEBUG = int(os.environ.get('DEBUG', default=0))
# For docker-compose env


#ALLOWED_HOSTS = ['127.0.0.1','10.8.62.73']
ALLOWED_HOSTS = os.environ.get('DJANGO_ALLOWED_HOSTS').split(' ')
# For docker-compose env


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'import_export',
    'mainapp',
    'core',
    'authentication',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ito.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates', 
        'DIRS': [BASE_DIR / 'mainapp-ui/build'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ito.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql_psycopg2',
#        'NAME': 'portal_db',
#	'USER': 'django_user',
#	'PASSWORD': 'Jx715$31',
#	'HOST': '127.0.0.1',
#	'PORT': '5432',
#        'PORT': '5433',
#}
    "default": {
        "ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3"),
        "NAME": os.environ.get("SQL_DATABASE", os.path.join(BASE_DIR, "db.sqlite3")),
        "USER": os.environ.get("SQL_USER", "user"),
        "PASSWORD": os.environ.get("SQL_PASSWORD", "password"),
        "HOST": os.environ.get("SQL_HOST", "localhost"),
        "PORT": os.environ.get("SQL_PORT", "5432"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'static'

STATICFILES_DIRS = (
    (BASE_DIR / 'mainapp-ui/build/static'),
)

# STATIC_ROOT = os.path.join.(BASE_DIR, 'static')
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
	'rest_framework.permissions.IsAuthenticated'
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
	'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    ),
}

JWT_AUTH = { 
    'JWT_ENCODE_HANDLER': 'rest_framework_jwt.utils.jwt_encode_handler', 
    'JWT_DECODE_HANDLER': 'rest_framework_jwt.utils.jwt_decode_handler', 
    'JWT_PAYLOAD_HANDLER':'rest_framework_jwt.utils.jwt_payload_handler', 
    'JWT_PAYLOAD_GET_USER_ID_HANDLER': 'rest_framework_jwt.utils.jwt_get_user_id_from_payload_handler', 
    'JWT_RESPONSE_PAYLOAD_HANDLER': 'rest_framework_jwt.utils.jwt_response_payload_handler',
    'JWT_SECRET_KEY': 'SECRET_KEY', 
    'JWT_GET_USER_SECRET_KEY': None, 
    'JWT_PUBLIC_KEY': None, 
    'JWT_PRIVATE_KEY': None, 
    'JWT_ALGORITHM': 'HS256', 
    'JWT_VERIFY': True, 
    'JWT_VERIFY_EXPIRATION': True, 
    'JWT_LEEWAY': 0, 
    'JWT_EXPIRATION_DELTA': timedelta(days=30), 
    'JWT_AUDIENCE': None, 
    'JWT_ISSUER': None, 
    'JWT_ALLOW_REFRESH': False, 
    'JWT_REFRESH_EXPIRATION_DELTA': timedelta(days=30),
    'JWT_AUTH_HEADER_PREFIX': 'JWT',
    'JWT_AUTH_COOKIE': None,
}

# Custom user model
AUTH_USER_MODEL = "authentication.CustomUser"

# Logger
#LOGGING = {
#    'version': 1,
#    'disable_existing_loggers': False,
#    'formatters': {
#        'file': {
#            'format': '%(asctime)s %(name)-12s %(levelname)-8s %(message)s',
#        },
#        'simplefile':{
#            'format': '%(levelname)-8s %(message)s',
#        },
#        'console': {
#            'format': '%(asctime)s %(levelname)-8s %(message)s',
#        },
#     },
#    'handlers': {
#        'file1': {
#            'level': 'DEBUG',
#            'class': 'logging.FileHandler',
#            'formatter': 'file',
#            'filename': BASE_DIR / 'debug1.log',
#        },
#        'auth_file':{
#            'level': 'DEBUG',
#            'level': 'INFO',
#            'class': 'logging.FileHandler',
#            'formatter': 'file',
#            'formatter': 'simplefile',
#            'filename': '/home/elyshev.sv/Portal/auth_info.log',
#            'filename': BASE_DIR / 'auth_info.log',
#        },
#        'file': {
#            'level': 'DEBUG',
#            'class': 'logging.FileHandler',
#            'formatter': 'file',
#            'filename': './home/elyshev.sv/Portal/debug1.log',
#            'filename': '/home/elyshev.sv/Portal/auth_info.log',
#            'filename': BASE_DIR / 'debug.log',
#        },
#        'console': {
#            'level': 'DEBUG',
#            'class': 'logging.StreamHandler',
#            'formatter': 'console',
#        },
#    },
#    'loggers': {
#        '': {
#        'django': {
#            'handlers': ['file'],
#            'level': 'DEBUG',
#            'propagate': True,
#        },
#        'django.request': {
#            'level': 'DEBUG',
#            'handlers': ['file'],
#            'propagate': True,
#        },
#        'auth': {
##        'loggers.auth': {
# #           'level': 'INFO',
#            'level': 'DEBUG',
#            'handlers': ['auth_file', 'console'],
#            'propagate': False,
#        },
#    },
#}
